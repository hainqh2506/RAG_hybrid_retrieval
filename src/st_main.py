import streamlit as st
from langchain_core.messages import HumanMessage, AIMessage
import time
# from create_agents import get_rag_agent
# @st.cache_resource
# def get_rag_agent():
#     rag_agent = get_rag_agent()
#     return rag_agent
# rag_agent = get_rag_agent()
# Thi·∫øt l·∫≠p giao di·ªán c∆° b·∫£n
st.set_page_config(page_title="University Assistant", page_icon="ü§ñ")
st.title("University Assistant")
# H√†m get_response v·ªõi chu·ªói c·ª©ng
def get_response(user_query, chat_history):
    # response = rag_agent.run(message=user_query)
    s = "c√≥ ph·∫£i b·∫°n v·ª´a n√≥i v·ªÅ "
    response = stream_text(s+user_query)
    return response
def stream_text(text):
    """Generator function ƒë·ªÉ stream t·ª´ng t·ª´ c·ªßa vƒÉn b·∫£n"""
    time.sleep(1)
    # Chu·ªói m·ªõi ƒë∆∞·ª£c th√™m v√†o cu·ªëi vƒÉn b·∫£n
    new_text =text +" N·∫øu b·∫°n c√≥ c√¢u h·ªèi n√†o kh√°c h√£y cho t√¥i bi·∫øt nh√©! M·ªùi b·∫°n tham kh·∫£o th√™m c√°c th√¥ng tin kh√°c t·∫°i ƒë√¢y: "
    link = "[S·ªï tay sinh vi√™n](https://ctsv.hust.edu.vn/#/so-tay-sv)"
    # Streaming t·ª´ng t·ª´ trong vƒÉn b·∫£n
    for word in new_text.split():
        yield word + " "
        # N·∫øu mu·ªën ƒëi·ªÅu ch·ªânh t·ªëc ƒë·ªô stream, c√≥ th·ªÉ th√™m time.sleep()
        time.sleep(0.05)
    yield link
    # Sau khi ho√†n th√†nh streaming, hi·ªÉn th·ªã link
    #st.markdown(link)
###app###
def process_user_input(user_query):
    if not user_query:
        return None
    if len(user_query) > 512:
        st.error("ƒê·ªô d√†i c√¢u h·ªèi qu√° d√†i, vui l√≤ng nh·∫≠p c√¢u h·ªèi ng·∫Øn h∆°n!")
        return None
    st.session_state.chat_history.append(HumanMessage(content=user_query))
    
    with st.chat_message("Human"):
        st.markdown(user_query)
    
    with st.chat_message("AI"):
        response = st.write_stream(get_response(user_query, st.session_state.chat_history))


    st.session_state.chat_history.append(AIMessage(content=response))
    return response
def display_chat_history():
    if "chat_history" not in st.session_state:
        st.session_state.chat_history = []
        st.session_state.chat_history.append(AIMessage(
            content="Ch√†o b·∫°n, T√¥i l√† tr·ª£ l√Ω ·∫£o c·ªßa ƒê·∫°i h·ªçc . T√¥i c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n?"
        ))
    
    for message in st.session_state.chat_history:
        if isinstance(message, AIMessage):
            with st.chat_message("AI"):
                st.write(message.content)
        elif isinstance(message, HumanMessage):
            with st.chat_message("Human"):
                st.write(message.content)

# Main interaction
display_chat_history()
user_query = st.chat_input("Nh·∫≠p tin nh·∫Øn c·ªßa b·∫°n...")
if user_query:
    process_user_input(user_query)